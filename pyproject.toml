[tool.poetry]
name = "analise-de-dados"
version = "0.1.0"
description = ""
authors = ["Fenyx Forte <fenyx.studies@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"


[tool.poetry.group.etl.dependencies]
pandera = { version = ">=0.20.3", extras = ["polars"] }


[tool.poetry.group.processamento.dependencies]
polars = { version = ">=1.4.0", extras = ["pyarrow"] }
duckdb = ">=1.0.0"


[tool.poetry.group.docs.dependencies]
mkdocs = ">=1.6.0"
mkdocstrings = { version = ">=0.25.2", extras = ["python"] }
mkdocs-material = ">=9.5.30"


[tool.poetry.group.jupyter.dependencies]
ipykernel = "^6.29.5"


[tool.poetry.group.segredos.dependencies]
python-dotenv = "^1.0.1"


[tool.poetry.group.dev.dependencies]
pre-commit = ">=3.8.0"
ruff = ">=0.5.5"
bandit = ">=1.7.9"
pyright = "^1.1.391"
sqlfluff = "^3.3.0"


[tool.poetry.group.testes.dependencies]
pytest = ">=8.3.2"


[tool.poetry.group.logging.dependencies]
loguru = ">=0.7.2"


[tool.poetry.group.webscraping.dependencies]
scrapy = "^2.11.2"
requests = "^2.32.3"
scrapeops-scrapy = "^0.5.6"


[tool.poetry.group.dashboard.dependencies]
pandas = "^2.2.2"
dash = ">=2.17.1"
dash-bootstrap-components = "^1.6.0"
dash-ag-grid = "^31.2.0"
gunicorn = "^23.0.0"
orjson = "^3.10.7"


[tool.poetry.group.tasks.dependencies]
taskipy = "^1.13.0"


[tool.taskipy.tasks]
tenis_corrida = "scrapy crawl tenis_corrida"
run = "python etl_main.py"
test = "pytest"


[tool.ruff]
line-length = 80
indent-width = 4
target-version = "py313"
include = [
    "pyproject.toml",
    "src/*.py",
    "src/**/*.py",
    "tests/*.py",
    "tests/**/*.py",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
docstring-code-line-length = 80

[tool.ruff.lint]
select = ["ALL"]

ignore = [
    #### modules
    # "ANN", # flake8-annotations
    # "COM", # flake8-commas
    "DJ",  # django
    "EXE", # flake8-executable
    "T10", # debugger
    # "TID", # flake8-tidy-imports

    #### specific rules
    "E501",    # line too long
    "S101",    # assert
    "PLR2004", # hardcoded numbers
    "ARG001",  # unused function argument
    "ARG002",  # unused method argument
    "BLE001",  # blind exception
]

[tool.ruff.lint.pydocstyle]
convention = "google" # Accepts: "google", "numpy", or "pep257".

[tool.bandit]
skips = ["B101", "B108", "B113", "B311"]

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
addopts = "-v -ra -q"
log_cli = true
log_cli_level = "INFO"
log_format = "%(asctime)s %(levelname)s %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"
filterwarnings = "ignore"

[tool.pyright]
venvPath = "."
venv = ".venv"

pythonVersion = "3.13"
pythonPlatform = "Linux"

typeCheckingMode = "strict"
"reportMissingTypeStubs" = false

include = ["src", "tests"]
exclude = ["**/node_modules", "**/__pycache__"]

[tool.sqlfluff.core]
dialect = "duckdb"
exclude_rules = "RF05, LT05"
ignore = "templating"
large_file_skip_byte_limit = 0
max_line_length = 100

[tool.sqlfluff.layout.type.comma]
line_position = "leading"

[tool.sqlfluff.indentation]
tab_space_size = 2
indent_unit = "space"
indented_joins = true
indented_ctes = true
indented_using_on = true
indented_then = true
indented_then_contents = true

[tool.sqlfluff.rules.aliasing.table]
aliasing = "explicit"

[tool.sqlfluff.rules.aliasing.column]
aliasing = "explicit"

[tool.sqlfluff.rules.capitalisation.keywords]
capitalisation_policy = "lower"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
